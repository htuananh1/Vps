name: Create VPS (Auto Restart)

on:
  workflow_dispatch:
    inputs:
      vps_name:
        description: 'Tên VPS'
        required: true
        default: 'manual-vps'
      backup:
        description: 'Khôi phục từ backup?'
        type: boolean
        default: false
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📁 Prepare dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup (optional)
        if: github.event.inputs.backup == 'true' || github.event.client_payload.backup == 'true'
        run: |
          name="${{ github.event.inputs.vps_name || github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ -f ".backup/$name.zip" ]; then
            echo "📦 Restoring from local backup..."
            unzip -o ".backup/$name.zip" -d . || echo "⚠️ Failed to restore local backup."
          else
            # Try remote restore via auto-start.txt
            if [ -f "auto-start.txt" ]; then
              chmod +x auto-start.txt
              timeout 60s ./auto-start.txt restore_backup || echo "⚠️ Remote restore failed or timed out."
            fi
          fi

      - name: 🔐 Start tmate session
        run: |
          sudo apt update -y && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          name="${{ github.event.inputs.vps_name || github.event.client_payload.vps_name || 'manual-vps' }}"
          echo "$SSH" > "links/$name.txt"
          echo "🔗 SSH link saved to links/$name.txt"

      - name: 🚀 Start Playit Tunnel
        run: |
          wget -q https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
          chmod +x playit
          nohup ./playit > playit.log 2>&1 &
          echo "✅ Playit started in background."

      - name: 📦 Save backup
        run: |
          name="${{ github.event.inputs.vps_name || github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -qr ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" "links/*" || true

      - name: 📤 Push updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH + backup"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: ⏳ Keep VPS alive
        run: |
          for i in $(seq 1 360); do
            echo "🟢 Running minute $i/360..."
            sleep 60
          done

      - name: 🔁 Restart workflow
        if: always()
        run: |
          name="${{ github.event.inputs.vps_name || github.event.client_payload.vps_name || 'manual-vps' }}"
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer 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" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "'"$name"'", "backup": true}}'
