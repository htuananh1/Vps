name: Create VPS (Auto Restart)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours
    env:
      TMATE_SERVER: nyc1.tmate.io

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📁 Prepare dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup (optional)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            unzip ".backup/$name.zip" -d . || echo "⚠️ No backup found."
          fi

      - name: 🔐 Start SSH via Ngrok (thay cho tmate)
        run: |
          # Cài OpenSSH server và tiện ích
          sudo apt update -y
          sudo apt install -y openssh-server curl unzip jq
          # Bật đăng nhập bằng mật khẩu + cho phép root
          sudo sed -i 's/^#\?PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#\?PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config
          echo "root:Htdviuv@864894" | sudo chpasswd
          sudo service ssh restart

          # Cài ngrok
          wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip -q ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin

          # Auth và mở tunnel TCP 22
          ngrok authtoken 31cSvqxIruAptWr7MVXy7e3mmA6_5rHEUnQXd9WMV8asM5Rri
          nohup ngrok tcp 22 --log=stdout > ngrok.log 2>&1 &

          # Chờ ngrok lên và lấy URL công khai
          for i in {1..20}; do
            URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' || true)
            [ "$URL" != "null" ] && [ -n "$URL" ] && break
            echo "⏳ Đợi ngrok... ($i)"; sleep 2
          done

          # Tách host/port, in lệnh SSH, và lưu vào links/<name>.txt
          HOST=$(echo "$URL" | sed -E 's#tcp://([^:]+):([0-9]+)#\1#')
          PORT=$(echo "$URL" | sed -E 's#tcp://([^:]+):([0-9]+)#\2#')
          SSH_CMD="ssh root@$HOST -p $PORT"
          echo "👉 Dùng lệnh:"
          echo "$SSH_CMD"
          echo "🔑 Password: Htdviuv@864894"

          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          echo "$SSH_CMD  (pass: Htdviuv@864894)" | tee "links/$name.txt"

      - name: 🚀 Start Playit Tunnel
        run: |
          wget -q https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
          chmod +x playit
          nohup ./playit > playit.log 2>&1 &
          echo "✅ Playit started in background."

      - name: 📦 Save backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -qr ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" || true

      - name: 📤 Push updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH + backup"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: ⏳ Keep VPS alive
        run: |
          for i in $(seq 1 $((360))); do
            echo "🟢 Running minute $i/360..."
            sleep 60
          done

      - name: 🔁 Restart workflow
        if: always()
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer 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" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "manual-vps", "backup": true}}'
