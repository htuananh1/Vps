name: Create VPS (Auto Restart)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours
    
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üìÅ Prepare directories
        run: mkdir -p links .backup

      - name: üíæ Restore backup (if exists)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            if [ -f ".backup/$name.zip" ]; then
              echo "üì¶ Restoring backup..."
              unzip -q ".backup/$name.zip" -d . || echo "‚ö†Ô∏è Failed to restore backup"
            else
              echo "‚ö†Ô∏è No backup found for $name"
            fi
          fi

      - name: üîê Setup SSH Server with Bore Tunnel
        run: |
          # Install SSH server
          echo "üîß Installing SSH server..."
          sudo apt update -qq && sudo apt install -y openssh-server
          
          # Configure SSH
          sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo service ssh restart
          
          # Create user with random password
          PASSWORD=$(openssl rand -base64 16)
          sudo useradd -m -s /bin/bash vpsuser
          echo "vpsuser:$PASSWORD" | sudo chpasswd
          sudo usermod -aG sudo vpsuser
          
          # Give sudo privileges without password
          echo "vpsuser ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/vpsuser
          
          # Download Bore
          echo "üì• Downloading Bore tunnel..."
          wget -q https://github.com/ekzhang/bore/releases/latest/download/bore-v0.5.1-x86_64-unknown-linux-musl.tar.gz
          tar -xzf bore-v0.5.1-x86_64-unknown-linux-musl.tar.gz
          
          # Start Bore tunnel
          echo "üöá Starting Bore tunnel..."
          ./bore local 22 --to bore.pub > bore.log 2>&1 &
          BORE_PID=$!
          
          # Wait for tunnel to establish
          sleep 10
          
          # Extract port from log
          if [ -f bore.log ]; then
            PORT=$(grep -oP 'listening on bore\.pub:\K\d+' bore.log | head -1)
            if [ -z "$PORT" ]; then
              # Fallback: try to get from process
              PORT=$(ps aux | grep -v grep | grep bore | grep -oP '\-\-to bore\.pub:\K\d+' | head -1)
            fi
          fi
          
          # If still no port, use default message
          if [ -z "$PORT" ]; then
            PORT="Check bore.log for port"
          fi
          
          # Save connection info
          echo "=====================================" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "üñ•Ô∏è  VPS SSH CONNECTION INFO" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "=====================================" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "Host: bore.pub" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "Port: $PORT" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "Username: vpsuser" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "Password: $PASSWORD" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "-------------------------------------" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "SSH Command:" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "ssh vpsuser@bore.pub -p $PORT" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "=====================================" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "Created at: $(date)" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "=====================================" | tee -a "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          
          # Show bore log for debugging
          echo "üìã Bore tunnel log:"
          cat bore.log || echo "No log available"

      - name: üöÄ Start Playit Tunnel (Alternative access)
        continue-on-error: true
        run: |
          wget -q https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
          chmod +x playit
          nohup ./playit > playit.log 2>&1 &
          echo "‚úÖ Playit tunnel started (check playit.log for details)"

      - name: üõ†Ô∏è Install useful tools
        run: |
          sudo apt install -y htop neofetch curl wget git nano vim net-tools
          echo "‚úÖ Basic tools installed"

      - name: üì¶ Create backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          echo "üì¶ Creating backup for $name..."
          zip -qr ".backup/$name.zip" . \
            -x ".git/*" ".github/*" ".backup/*" "*.log" "bore-*" "playit" \
            || echo "‚ö†Ô∏è Backup creation failed"

      - name: üì§ Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "üîÑ Updated SSH connection info + backup"
          file_pattern: 'links/*.txt .backup/*.zip'
          commit_options: '--no-verify'

      - name: ‚è≥ Keep VPS alive (6 hours)
        run: |
          echo "üü¢ VPS is running. Will stay alive for 6 hours..."
          echo "üìä System Info:"
          neofetch || echo ""
          
          # Keep alive loop
          for i in $(seq 1 360); do
            if [ $((i % 30)) -eq 0 ]; then
              echo "‚è∞ [$(date '+%H:%M:%S')] Running for $i/360 minutes..."
              # Check if SSH is still running
              sudo service ssh status > /dev/null || sudo service ssh restart
              # Check if bore is still running
              ps aux | grep -v grep | grep bore > /dev/null || echo "‚ö†Ô∏è Bore tunnel may be down"
            fi
            sleep 60
          done

      - name: üîÅ Auto restart workflow
        if: always()
        run: |
          echo "üîÑ Restarting workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer 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" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "manual-vps", "backup": true}}'
          echo "‚úÖ Restart request sent"
